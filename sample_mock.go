// Code generated by MockGen. DO NOT EDIT.
// Source: ./sample.go

// Package golangtest is a generated GoMock package.
package golangtest

import (
	gomock "github.com/golang/mock/gomock"
	reflect "reflect"
)

// Mockdependency is a mock of dependency interface
type Mockdependency struct {
	ctrl     *gomock.Controller
	recorder *MockdependencyMockRecorder
}

// MockdependencyMockRecorder is the mock recorder for Mockdependency
type MockdependencyMockRecorder struct {
	mock *Mockdependency
}

// NewMockdependency creates a new mock instance
func NewMockdependency(ctrl *gomock.Controller) *Mockdependency {
	mock := &Mockdependency{ctrl: ctrl}
	mock.recorder = &MockdependencyMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *Mockdependency) EXPECT() *MockdependencyMockRecorder {
	return m.recorder
}

// foo mocks base method
func (m *Mockdependency) foo() error {
	ret := m.ctrl.Call(m, "foo")
	ret0, _ := ret[0].(error)
	return ret0
}

// foo indicates an expected call of foo
func (mr *MockdependencyMockRecorder) foo() *gomock.Call {
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "foo", reflect.TypeOf((*Mockdependency)(nil).foo))
}
